{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name game.core, :imports nil, :requires {game.subs game.subs, reagent reagent.core, game.views game.views, game.config game.config, views game.views, reagent.core reagent.core, config game.config, game.events game.events, re-frisk.core re-frisk.core, cljsjs.pixi cljsjs.pixi, re-frame re-frame.core, game.effects game.effects, re-frame.core re-frame.core}, :uses {enable-re-frisk! re-frisk.core, dispatch re-frame.core}, :defs {dev-setup {:protocol-inline nil, :meta {:file "/Users/dan/code/clojure/reframe-pixi/src/cljs/game/core.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([]))}, :name game.core/dev-setup, :variadic false, :file "src/cljs/game/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/dan/code/clojure/reframe-pixi/src/cljs/game/core.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([]))}, :name game.core/mount-root, :variadic false, :file "src/cljs/game/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-pixi {:protocol-inline nil, :meta {:file "/Users/dan/code/clojure/reframe-pixi/src/cljs/game/core.cljs", :line 25, :column 7, :end-line 25, :end-column 16, :arglists (quote ([]))}, :name game.core/init-pixi, :variadic false, :file "src/cljs/game/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/Users/dan/code/clojure/reframe-pixi/src/cljs/game/core.cljs", :line 40, :column 16, :end-line 40, :end-column 20, :export true, :arglists (quote ([]))}, :name game.core/init, :variadic false, :file "src/cljs/game/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :initialize-db :pixi/start :pixi.sprites/move :id :image :x :pixi.sprites/create}, :order [:pixi/start :pixi.sprites/create :id :x :y :image :pixi.sprites/move :initialize-db]}, :doc nil}