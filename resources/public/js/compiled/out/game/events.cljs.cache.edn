{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name game.events, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, db game.db, game.db game.db}, :uses {reg-event-db re-frame.core}, :defs {get-texture {:protocol-inline nil, :meta {:file "/Users/dan/code/clojure/reframe-pixi/src/cljs/game/events.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([id]))}, :name game.events/get-texture, :variadic false, :file "src/cljs/game/events.cljs", :end-column 18, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :initialize-db :started :stage :pixi/start :js-obj :pixi :renderer :pixi.sprites/move :id :image :x :pixi.sprites/create :sprites}, :order [:initialize-db :pixi/start :pixi :renderer :sprites :started :stage :pixi.sprites/create :image :x :y :id :js-obj :pixi.sprites/move]}, :doc nil}